# This workflow will build a Java project with Gradle and push to GitHub container registry .. 
name: build and push image to github container registry

on:
  push:
    branches: [ azure-aks ]

  #Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CLUSTER_NAME: demo-aks
  CLUSTER_RESOURCE_GROUP: my_group
  IMG_TAG: 0.${{ github.RUN_NUMBER }}.${{ github.RUN_ATTEMPT }}

jobs:
  build-and-push-image:
    name: build
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3.4.0
        with:
          java-version: 17
          distribution: 'microsoft'
          cache: gradle

      - name: make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          mongodb_host: localhost
        run: ./gradlew build

      - name: Extract metadata (tags, labels) for registry
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMG_TAG }}
          labels: |
            org.opencontainers.image.description="${{ github.event.head_commit.message }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Build and Push Image to Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deployment:
    name: deployment
    needs:
      - build-and-push-image
    runs-on: self-hosted
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      # below only needed if they are not installed in self hosted runners  
      - uses: elstudio/action-install-azure-cli@v1
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - uses: azure/setup-helm@v3
      - run: sudo apt install unzip
      - uses: Azure/setup-kubectl@v3
      # above only needed if they are not installed in self hosted runners.

      - name: Azure Login
        uses: Azure/login@v1.4.5
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Set the target Azure Kubernetes Service (AKS) cluster. 
        uses: azure/aks-set-context@v2
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
      
      - name: Deploy using Helm
        run: helm upgrade --install demo helm-demo/ --set image.tag=${{ env.IMG_TAG }} --namespace demo-namespace --create-namespace --wait
                 
      - name: Verify Deployment
        run: kubectl rollout status deployment/demo -n demo-namespace
